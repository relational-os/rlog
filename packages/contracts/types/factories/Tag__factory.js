"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tag__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "author",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "createdTimestamp",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "name",
                        type: "string",
                    },
                ],
                indexed: false,
                internalType: "struct Tag.TagContents",
                name: "tag",
                type: "tuple",
            },
        ],
        name: "TagCreated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "create",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "tagID",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "tags",
        outputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "author",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "createdTimestamp",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061052c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320822abc14610046578063b6a46b3b14610072578063c0853d3214610087575b600080fd5b61005961005436600461028d565b61009e565b60405161006994939291906102a6565b60405180910390f35b61008561008036600461032f565b61015b565b005b61009060015481565b604051908152602001610069565b600060208190529081526040902080546001820154600283015460038401805493946001600160a01b03909316939192916100d8906103e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610104906103e0565b80156101515780601f1061012657610100808354040283529160200191610151565b820191906000526020600020905b81548152906001019060200180831161013457829003601f168201915b5050505050905084565b6001805460008181526020818152604090912091825591810180546001600160a01b031916331790554260028201558251909161019f9160038401918501906101f4565b507ffa2f4b9fe47526a91786f7baba8aa8af87b5083e7cf683d2be4f094feae8e4bd600154826040516101d392919061041a565b60405180910390a1600180549060006101eb836104f8565b91905055505050565b828054610200906103e0565b90600052602060002090601f0160209004810192826102225760008555610268565b82601f1061023b57805160ff1916838001178555610268565b82800160010185558215610268579182015b8281111561026857825182559160200191906001019061024d565b50610274929150610278565b5090565b5b808211156102745760008155600101610279565b60006020828403121561029f57600080fd5b5035919050565b8481526000602060018060a01b0386168184015284604084015260806060840152835180608085015260005b818110156102ee5785810183015185820160a0015282016102d2565b8181111561030057600060a083870101525b50601f01601f19169290920160a0019695505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561034157600080fd5b813567ffffffffffffffff8082111561035957600080fd5b818401915084601f83011261036d57600080fd5b81358181111561037f5761037f610319565b604051601f8201601f19908116603f011681019083821181831017156103a7576103a7610319565b816040528281528760208487010111156103c057600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806103f457607f821691505b60208210810361041457634e487b7160e01b600052602260045260246000fd5b50919050565b8281526000602060408184015283546040840152600180600160a01b03818601541660608501526002850154608085015260038501608060a0860152600081548181851c90508482168061046f57607f821691505b868210810361048c57634e487b7160e01b84526022600452602484fd5b60c0890182905260e089018180156104ab57600181146104bc576104e7565b60ff198516825288820195506104e7565b60008781526020902060005b858110156104e157815484820152908901908a016104c8565b83019650505b50939b9a5050505050505050505050565b60006001820161051857634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c634300080d000a";
const isSuperArgs = (xs) => xs.length > 1;
class Tag__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Tag__factory = Tag__factory;
Tag__factory.bytecode = _bytecode;
Tag__factory.abi = _abi;
