"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Log__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                    {
                        internalType: "address",
                        name: "author",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "createdTimestamp",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "modifiedTimestamp",
                        type: "uint256",
                    },
                    {
                        internalType: "string",
                        name: "data",
                        type: "string",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "addr",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "id",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct Relational.Relationship[]",
                        name: "relationships",
                        type: "tuple[]",
                    },
                ],
                indexed: false,
                internalType: "struct Log.LogContents",
                name: "data",
                type: "tuple",
            },
        ],
        name: "LogCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "string",
                name: "data",
                type: "string",
            },
        ],
        name: "LogEdited",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "LogRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                ],
                indexed: false,
                internalType: "struct Relational.Relationship",
                name: "relationship",
                type: "tuple",
            },
        ],
        name: "RelationshipAdded",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                ],
                internalType: "struct Relational.Relationship",
                name: "relationship",
                type: "tuple",
            },
        ],
        name: "addBiDirectionalRelationship",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                ],
                internalType: "struct Relational.Relationship",
                name: "relationship",
                type: "tuple",
            },
        ],
        name: "addUniDirectionalRelationship",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "data",
                type: "string",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256",
                    },
                ],
                internalType: "struct Relational.Relationship[]",
                name: "relationships",
                type: "tuple[]",
            },
        ],
        name: "create",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "data",
                type: "string",
            },
        ],
        name: "edit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "logCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "logs",
        outputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "author",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "createdTimestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "modifiedTimestamp",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "data",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "remove",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610b5c806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639bb96fb61161005b5780639bb96fb6146100bd5780639e4605d4146100d0578063a503898f146100e3578063e79899bd146100ff57600080fd5b806336423f541461008257806347bde2db146100975780634cc82215146100aa575b600080fd5b610095610090366004610623565b610123565b005b6100956100a53660046106cf565b610184565b6100956100b83660046107a5565b610260565b6100956100cb3660046107be565b6102e5565b6100956100de3660046107be565b61037b565b6100ec60015481565b6040519081526020015b60405180910390f35b61011261010d3660046107a5565b61040c565b6040516100f6959493929190610831565b60008281526020819052604090204260038201556004810161014583826108f7565b507f45171689d6828acd082ae729fcc0526eaadbf9efdb85bc3c401787b741b0158683836040516101779291906109b7565b60405180910390a1505050565b60018054600081815260208190526040902090815590810180546001600160a01b0319163317905542600282018190556003820155600481016101c784826108f7565b5060005b825181101561020b576101f96001548483815181106101ec576101ec6109d8565b60200260200101516102e5565b80610203816109ee565b9150506101cb565b5080546040517fd52a3ae8776152e112dab9cf8d1b0caeff95c8e58f7a712b4e7604ad739db9819161023e918490610a6a565b60405180910390a160018054906000610256836109ee565b9190505550505050565b60008181526020819052604081208181556001810180546001600160a01b031916905560028101829055600381018290559061029f60048301826104cf565b6102ad60058301600061050c565b50506040518181527f25462627c9fafd28b391931aba322a8a25cf69c777e246b13ee864f8361a56789060200160405180910390a150565b60408051808201825230815260208082018581528451918501519351632791817560e21b8152600481019490945282516001600160a01b039081166024860152905160448501529192911690639e4605d490606401600060405180830381600087803b15801561035457600080fd5b505af1158015610368573d6000803e3d6000fd5b50505050610376838361037b565b505050565b6000828152602081815260408083206005810180546001808201835591865294849020865160029096020180546001600160a01b0319166001600160a01b03968716178155868501805191909201558251878152865190951693850193909352915190830152907f2c9c21b47ecc3b161a8321182d9393b143a87f0317ffc09626e3ed2f1b8c420390606001610177565b6000602081905290815260409020805460018201546002830154600384015460048501805494956001600160a01b03909416949293919261044c9061086f565b80601f01602080910402602001604051908101604052809291908181526020018280546104789061086f565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050905085565b5080546104db9061086f565b6000825580601f106104eb575050565b601f016020900490600052602060002090810190610509919061052d565b50565b50805460008255600202906000526020600020908101906105099190610546565b5b80821115610542576000815560010161052e565b5090565b5b808211156105425780546001600160a01b031916815560006001820155600201610547565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105ab576105ab61056c565b604052919050565b600082601f8301126105c457600080fd5b813567ffffffffffffffff8111156105de576105de61056c565b6105f1601f8201601f1916602001610582565b81815284602083860101111561060657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561063657600080fd5b82359150602083013567ffffffffffffffff81111561065457600080fd5b610660858286016105b3565b9150509250929050565b60006040828403121561067c57600080fd5b6040516040810181811067ffffffffffffffff8211171561069f5761069f61056c565b60405290508082356001600160a01b03811681146106bc57600080fd5b8152602092830135920191909152919050565b60008060408084860312156106e357600080fd5b833567ffffffffffffffff808211156106fb57600080fd5b610707878388016105b3565b945060209150818601358181111561071e57600080fd5b8601601f8101881361072f57600080fd5b8035828111156107415761074161056c565b61074f848260051b01610582565b818152848101935060069190911b82018401908982111561076f57600080fd5b918401915b81831015610795576107868a8461066a565b84529284019291850191610774565b8096505050505050509250929050565b6000602082840312156107b757600080fd5b5035919050565b600080606083850312156107d157600080fd5b823591506107e2846020850161066a565b90509250929050565b6000815180845260005b81811015610811576020818501810151868301820152016107f5565b506000602082860101526020601f19601f83011685010191505092915050565b85815260018060a01b038516602082015283604082015282606082015260a06080820152600061086460a08301846107eb565b979650505050505050565b600181811c9082168061088357607f821691505b6020821081036108a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037657600081815260208120601f850160051c810160208610156108d05750805b601f850160051c820191505b818110156108ef578281556001016108dc565b505050505050565b815167ffffffffffffffff8111156109115761091161056c565b6109258161091f845461086f565b846108a9565b602080601f83116001811461095a57600084156109425750858301515b600019600386901b1c1916600185901b1785556108ef565b600085815260208120601f198616915b828110156109895788860151825594840194600190910190840161096a565b50858210156109a75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006109d060408301846107eb565b949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0e57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815480845260208085019450836000528060002060005b83811015610a5f5781546001600160a01b031687526001828101548489015260409097019660029092019101610a2e565b509495945050505050565b8281526000602060408184015283546040840152600180600160a01b038186015416606085015260028501546080850152600385015460a08501526004850160c08086015260008154610abc8161086f565b8061010089015261012085831660008114610ade5760018114610af857610b26565b60ff1984168a83015282151560051b8a0182019450610b26565b856000528760002060005b84811015610b1e5781548c8201850152908801908901610b03565b8b0183019550505b50505050858103603f190160e0870152610b438160058901610a15565b9897505050505050505056fea164736f6c6343000811000a";
const isSuperArgs = (xs) => xs.length > 1;
class Log__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Log__factory = Log__factory;
Log__factory.bytecode = _bytecode;
Log__factory.abi = _abi;
