/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Tag, TagInterface } from "../Tag";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Relational.Relationship",
        name: "relationship",
        type: "tuple",
      },
    ],
    name: "RelationshipAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdTimestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct Relational.Relationship[]",
            name: "relationships",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Tag.TagContents",
        name: "tag",
        type: "tuple",
      },
    ],
    name: "TagCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tagID",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Relational.Relationship",
        name: "relationship",
        type: "tuple",
      },
    ],
    name: "addBiDirectionalRelationship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tagID",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Relational.Relationship",
        name: "relationship",
        type: "tuple",
      },
    ],
    name: "addUniDirectionalRelationship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Relational.Relationship[]",
        name: "relationships",
        type: "tuple[]",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tagCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tags",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdTimestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108fc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806320822abc1461005c57806347bde2db146100885780636f810cbc1461009d5780639bb96fb6146100b45780639e4605d4146100c7575b600080fd5b61006f61006a36600461039c565b6100da565b60405161007f94939291906103b5565b60405180910390f35b61009b610096366004610556565b610197565b005b6100a660015481565b60405190815260200161007f565b61009b6100c236600461060e565b61026d565b61009b6100d536600461060e565b610303565b600060208190529081526040902080546001820154600283015460038401805493946001600160a01b03909316939192916101149061063b565b80601f01602080910402602001604051908101604052809291908181526020018280546101409061063b565b801561018d5780601f106101625761010080835404028352916020019161018d565b820191906000526020600020905b81548152906001019060200180831161017057829003601f168201915b5050505050905084565b60018054600081815260208190526040902090815590810180546001600160a01b03191633179055426002820155600381016101d384826106c3565b5060005b8251811015610217576102056001548483815181106101f8576101f8610783565b602002602001015161026d565b8061020f81610799565b9150506101d7565b507fff68782013636b22263c699f9f501086d2580d1e2fab8ea1d867efccd6397efe6001548260405161024b929190610815565b60405180910390a16001805490600061026383610799565b9190505550505050565b60408051808201825230815260208082018581528451918501519351632791817560e21b8152600481019490945282516001600160a01b039081166024860152905160448501529192911690639e4605d490606401600060405180830381600087803b1580156102dc57600080fd5b505af11580156102f0573d6000803e3d6000fd5b505050506102fe8383610303565b505050565b6000828152602081815260408083206004810180546001808201835591865294849020865160029096020180546001600160a01b0319166001600160a01b03968716178155868501805191909201558251878152865190951693850193909352915190830152907f2c9c21b47ecc3b161a8321182d9393b143a87f0317ffc09626e3ed2f1b8c42039060600160405180910390a1505050565b6000602082840312156103ae57600080fd5b5035919050565b8481526000602060018060a01b0386168184015284604084015260806060840152835180608085015260005b818110156103fd5785810183015185820160a0015282016103e1565b50600060a0828601015260a0601f19601f8301168501019250505095945050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561046057610460610421565b604052919050565b60006040828403121561047a57600080fd5b6040516040810181811067ffffffffffffffff8211171561049d5761049d610421565b60405290508082356001600160a01b03811681146104ba57600080fd5b8152602092830135920191909152919050565b600082601f8301126104de57600080fd5b8135602067ffffffffffffffff8211156104fa576104fa610421565b610508818360051b01610437565b82815260069290921b8401810191818101908684111561052757600080fd5b8286015b8481101561054b5761053d8882610468565b83529183019160400161052b565b509695505050505050565b6000806040838503121561056957600080fd5b823567ffffffffffffffff8082111561058157600080fd5b818501915085601f83011261059557600080fd5b81356020828211156105a9576105a9610421565b6105bb601f8301601f19168201610437565b82815288828487010111156105cf57600080fd5b828286018383013760009281018201929092529094508501359150808211156105f757600080fd5b50610604858286016104cd565b9150509250929050565b6000806060838503121561062157600080fd5b823591506106328460208501610468565b90509250929050565b600181811c9082168061064f57607f821691505b60208210810361066f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102fe57600081815260208120601f850160051c8101602086101561069c5750805b601f850160051c820191505b818110156106bb578281556001016106a8565b505050505050565b815167ffffffffffffffff8111156106dd576106dd610421565b6106f1816106eb845461063b565b84610675565b602080601f831160018114610726576000841561070e5750858301515b600019600386901b1c1916600185901b1785556106bb565b600085815260208120601f198616915b8281101561075557888601518255948401946001909101908401610736565b50858210156107735787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016107b957634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815480845260208085019450836000528060002060005b8381101561080a5781546001600160a01b0316875260018281015484890152604090970196600290920191016107d9565b509495945050505050565b8281526000602060408184015283546040840152600180600160a01b0381860154166060850152600285015460808501526003850160a0808601526000815461085d8161063b565b8060e08901526101008583166000811461087e5760018114610898576108c6565b60ff1984168a83015282151560051b8a01820194506108c6565b856000528760002060005b848110156108be5781548c82018501529088019089016108a3565b8b0183019550505b50505050858103603f190160c08701526108e381600489016107c0565b9897505050505050505056fea164736f6c6343000811000a";

type TagConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TagConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tag__factory extends ContractFactory {
  constructor(...args: TagConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Tag> {
    return super.deploy(overrides || {}) as Promise<Tag>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Tag {
    return super.attach(address) as Tag;
  }
  override connect(signer: Signer): Tag__factory {
    return super.connect(signer) as Tag__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TagInterface {
    return new utils.Interface(_abi) as TagInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Tag {
    return new Contract(address, _abi, signerOrProvider) as Tag;
  }
}
