/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { WalletFactory, WalletFactoryInterface } from "../WalletFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "clone",
    outputs: [
      {
        internalType: "address",
        name: "instance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "getWallets",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ff806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063422c29a41461003b5780638124b78e14610064575b600080fd5b61004e610049366004610275565b61008f565b60405161005b91906102a5565b60405180910390f35b610077610072366004610275565b610103565b6040516001600160a01b03909116815260200161005b565b6001600160a01b038116600090815260208181526040918290208054835181840281018401909452808452606093928301828280156100f757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116100d9575b50505050509050919050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b03811661019c5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640160405180910390fd5b60405163189acdbd60e31b815233600482015281906001600160a01b0382169063c4d66de890602401600060405180830381600087803b1580156101df57600080fd5b505af11580156101f3573d6000803e3d6000fd5b5050604080513381526001600160a01b03861660208201527f5b03bfed1c14a02bdeceb5fa582eb1a5765fc0bc64ca0e6af4c20afc9487f081935001905060405180910390a150336000908152602081815260408220805460018101825590835291200180546001600160a01b0319166001600160a01b038316179055919050565b60006020828403121561028757600080fd5b81356001600160a01b038116811461029e57600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156102e65783516001600160a01b0316835292840192918401916001016102c1565b5090969550505050505056fea164736f6c634300080d000a";

type WalletFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WalletFactory__factory extends ContractFactory {
  constructor(...args: WalletFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WalletFactory> {
    return super.deploy(overrides || {}) as Promise<WalletFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WalletFactory {
    return super.attach(address) as WalletFactory;
  }
  override connect(signer: Signer): WalletFactory__factory {
    return super.connect(signer) as WalletFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletFactoryInterface {
    return new utils.Interface(_abi) as WalletFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WalletFactory {
    return new Contract(address, _abi, signerOrProvider) as WalletFactory;
  }
}
