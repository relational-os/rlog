/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Log, LogInterface } from "../Log";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "author",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "createdTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "modifiedTimestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
            ],
            internalType: "struct Relational.Relationship[]",
            name: "relationships",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct Log.LogContents",
        name: "data",
        type: "tuple",
      },
    ],
    name: "LogCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "LogEdited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "LogRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Relational.Relationship",
        name: "relationship",
        type: "tuple",
      },
    ],
    name: "RelationshipAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Relational.Relationship",
        name: "relationship",
        type: "tuple",
      },
    ],
    name: "addBiDirectionalRelationship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Relational.Relationship",
        name: "relationship",
        type: "tuple",
      },
    ],
    name: "addUniDirectionalRelationship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct Relational.Relationship[]",
        name: "relationships",
        type: "tuple[]",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "edit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "logCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "logs",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "author",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "createdTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "modifiedTimestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b5d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639bb96fb61161005b5780639bb96fb6146100d05780639e4605d4146100e3578063a503898f146100f6578063e79899bd146100ff57600080fd5b806336423f541461008257806347bde2db146100975780634cc82215146100bd575b600080fd5b610095610090366004610624565b610123565b005b6100aa6100a53660046106d0565b610184565b6040519081526020015b60405180910390f35b6100956100cb3660046107a6565b610261565b6100956100de3660046107bf565b6102e6565b6100956100f13660046107bf565b61037c565b6100aa60015481565b61011261010d3660046107a6565b61040d565b6040516100b4959493929190610832565b60008281526020819052604090204260038201556004810161014583826108f8565b507f45171689d6828acd082ae729fcc0526eaadbf9efdb85bc3c401787b741b0158683836040516101779291906109b8565b60405180910390a1505050565b60018054600081815260208190526040902081815591820180546001600160a01b031916331790554260028301819055600383015590600481016101c885826108f8565b5060005b835181101561020a576101f8838583815181106101eb576101eb6109d9565b60200260200101516102e6565b80610202816109ef565b9150506101cc565b5080546040517fd52a3ae8776152e112dab9cf8d1b0caeff95c8e58f7a712b4e7604ad739db9819161023d918490610a6b565b60405180910390a160018054906000610255836109ef565b91905055505092915050565b60008181526020819052604081208181556001810180546001600160a01b03191690556002810182905560038101829055906102a060048301826104d0565b6102ae60058301600061050d565b50506040518181527f25462627c9fafd28b391931aba322a8a25cf69c777e246b13ee864f8361a56789060200160405180910390a150565b60408051808201825230815260208082018581528451918501519351632791817560e21b8152600481019490945282516001600160a01b039081166024860152905160448501529192911690639e4605d490606401600060405180830381600087803b15801561035557600080fd5b505af1158015610369573d6000803e3d6000fd5b50505050610377838361037c565b505050565b6000828152602081815260408083206005810180546001808201835591865294849020865160029096020180546001600160a01b0319166001600160a01b03968716178155868501805191909201558251878152865190951693850193909352915190830152907f2c9c21b47ecc3b161a8321182d9393b143a87f0317ffc09626e3ed2f1b8c420390606001610177565b6000602081905290815260409020805460018201546002830154600384015460048501805494956001600160a01b03909416949293919261044d90610870565b80601f016020809104026020016040519081016040528092919081815260200182805461047990610870565b80156104c65780601f1061049b576101008083540402835291602001916104c6565b820191906000526020600020905b8154815290600101906020018083116104a957829003601f168201915b5050505050905085565b5080546104dc90610870565b6000825580601f106104ec575050565b601f01602090049060005260206000209081019061050a919061052e565b50565b508054600082556002029060005260206000209081019061050a9190610547565b5b80821115610543576000815560010161052f565b5090565b5b808211156105435780546001600160a01b031916815560006001820155600201610548565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105ac576105ac61056d565b604052919050565b600082601f8301126105c557600080fd5b813567ffffffffffffffff8111156105df576105df61056d565b6105f2601f8201601f1916602001610583565b81815284602083860101111561060757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561063757600080fd5b82359150602083013567ffffffffffffffff81111561065557600080fd5b610661858286016105b4565b9150509250929050565b60006040828403121561067d57600080fd5b6040516040810181811067ffffffffffffffff821117156106a0576106a061056d565b60405290508082356001600160a01b03811681146106bd57600080fd5b8152602092830135920191909152919050565b60008060408084860312156106e457600080fd5b833567ffffffffffffffff808211156106fc57600080fd5b610708878388016105b4565b945060209150818601358181111561071f57600080fd5b8601601f8101881361073057600080fd5b8035828111156107425761074261056d565b610750848260051b01610583565b818152848101935060069190911b82018401908982111561077057600080fd5b918401915b81831015610796576107878a8461066b565b84529284019291850191610775565b8096505050505050509250929050565b6000602082840312156107b857600080fd5b5035919050565b600080606083850312156107d257600080fd5b823591506107e3846020850161066b565b90509250929050565b6000815180845260005b81811015610812576020818501810151868301820152016107f6565b506000602082860101526020601f19601f83011685010191505092915050565b85815260018060a01b038516602082015283604082015282606082015260a06080820152600061086560a08301846107ec565b979650505050505050565b600181811c9082168061088457607f821691505b6020821081036108a457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561037757600081815260208120601f850160051c810160208610156108d15750805b601f850160051c820191505b818110156108f0578281556001016108dd565b505050505050565b815167ffffffffffffffff8111156109125761091261056d565b610926816109208454610870565b846108aa565b602080601f83116001811461095b57600084156109435750858301515b600019600386901b1c1916600185901b1785556108f0565b600085815260208120601f198616915b8281101561098a5788860151825594840194600190910190840161096b565b50858210156109a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006109d160408301846107ec565b949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815480845260208085019450836000528060002060005b83811015610a605781546001600160a01b031687526001828101548489015260409097019660029092019101610a2f565b509495945050505050565b8281526000602060408184015283546040840152600180600160a01b038186015416606085015260028501546080850152600385015460a08501526004850160c08086015260008154610abd81610870565b8061010089015261012085831660008114610adf5760018114610af957610b27565b60ff1984168a83015282151560051b8a0182019450610b27565b856000528760002060005b84811015610b1f5781548c8201850152908801908901610b04565b8b0183019550505b50505050858103603f190160e0870152610b448160058901610a16565b9897505050505050505056fea164736f6c6343000811000a";

type LogConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LogConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Log__factory extends ContractFactory {
  constructor(...args: LogConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Log> {
    return super.deploy(overrides || {}) as Promise<Log>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Log {
    return super.attach(address) as Log;
  }
  override connect(signer: Signer): Log__factory {
    return super.connect(signer) as Log__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LogInterface {
    return new utils.Interface(_abi) as LogInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Log {
    return new Contract(address, _abi, signerOrProvider) as Log;
  }
}
