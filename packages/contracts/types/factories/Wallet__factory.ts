/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Wallet, WalletInterface } from "../Wallet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DuplicateRequest",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "SignerNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "SignerAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedSigners",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Wallet.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Wallet.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b506040805180820182526008815267141054d4d413d49560c21b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100f38184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c0526101205250610113925061010e9150503390565b610118565b610168565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60805160a05160c05160e0516101005161012051610fc26101b760003960006108b601526000610905015260006108e001526000610839015260006108630152600061088d0152610fc26000f3fe60806040526004361061007f5760003560e01c8063c4d66de81161004e578063c4d66de814610133578063eb12d61e14610153578063f2fde38b14610173578063f8b4d8641461019357600080fd5b806347153f821461008b578063715018a6146100b55780638da5cb5b146100cc578063bf5d3bdb146100f457600080fd5b3661008657005b600080fd5b61009e610099366004610c9d565b6101d3565b6040516100ac929190610d6c565b60405180910390f35b3480156100c157600080fd5b506100ca6103a6565b005b3480156100d857600080fd5b506000546040516001600160a01b0390911681526020016100ac565b34801561010057600080fd5b5061011461010f366004610c9d565b6103ba565b6040805192151583526001600160a01b039091166020830152016100ac565b34801561013f57600080fd5b506100ca61014e366004610dc4565b6104fb565b34801561015f57600080fd5b506100ca61016e366004610dc4565b61062e565b34801561017f57600080fd5b506100ca61018e366004610dc4565b610691565b34801561019f57600080fd5b506101c36101ae366004610dc4565b60016020526000908152604090205460ff1681565b60405190151581526020016100ac565b600060606000856040516020016101ea9190610e0f565b6040516020818303038152906040528051906020012090506000806102108888886103ba565b915091508161023257604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b03811660009081526001602052604090205460ff1661026b57604051637c8856b760e01b815260040160405180910390fd5b60008381526002602052604090205460ff161561029b5760405163e27d026d60e01b815260040160405180910390fd5b6000838152600260209081526040808320805460ff1916600117905582916102c7918c01908c01610dc4565b6001600160a01b031660608b013560408c01356102e760a08e018e610ebe565b8e60000160208101906102fa9190610dc4565b60405160200161030c93929190610f05565b60408051601f198184030181529082905261032691610f2b565b600060405180830381858888f193505050503d8060008114610364576040519150601f19603f3d011682016040523d82523d6000602084013e610369565b606091505b509150915081610380576040513d806000833e8082fd5b61038f603f60608c0135610f47565b5a1161039757fe5b90999098509650505050505050565b6103ae61070a565b6103b86000610764565b565b60008060006104d285858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104cc92507f6abd2e94240c57540c110e8851e6fc964c485c4f007231f63665d30672306854915061042c905060208b018b610dc4565b61043c60408c0160208d01610dc4565b8b604001358c606001358d608001358e8060a0019061045b9190610ebe565b604051610469929190610f69565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206107b4565b90610808565b90506104e16020870187610dc4565b6001600160a01b0382811691161492509050935093915050565b600054600160a81b900460ff161580801561052357506000546001600160a01b90910460ff16105b806105445750303b1580156105445750600054600160a01b900460ff166001145b6105ac5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff60a01b1916600160a01b17905580156105d9576000805460ff60a81b1916600160a81b1790555b6105e282610764565b801561062a576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b61063661070a565b6001600160a01b038116600081815260016020818152604092839020805460ff191690921790915590519182527f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f24910160405180910390a150565b61069961070a565b6001600160a01b0381166106fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a3565b61070781610764565b50565b6000546001600160a01b031633146103b85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006108026107c161082c565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006108178585610953565b91509150610824816109c1565b509392505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561088557507f000000000000000000000000000000000000000000000000000000000000000046145b156108af57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036109895760208301516040840151606085015160001a61097d87828585610b77565b945094505050506109ba565b82516040036109b257602083015160408401516109a7868383610c64565b9350935050506109ba565b506000905060025b9250929050565b60008160048111156109d5576109d5610f79565b036109dd5750565b60018160048111156109f1576109f1610f79565b03610a3e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105a3565b6002816004811115610a5257610a52610f79565b03610a9f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105a3565b6003816004811115610ab357610ab3610f79565b03610b0b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105a3565b6004816004811115610b1f57610b1f610f79565b036107075760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105a3565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610bae5750600090506003610c5b565b8460ff16601b14158015610bc657508460ff16601c14155b15610bd75750600090506004610c5b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c2b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c5457600060019250925050610c5b565b9150600090505b94509492505050565b6000806001600160ff1b03831681610c8160ff86901c601b610f8f565b9050610c8f87828885610b77565b935093505050935093915050565b600080600060408486031215610cb257600080fd5b833567ffffffffffffffff80821115610cca57600080fd5b9085019060c08288031215610cde57600080fd5b90935060208501359080821115610cf457600080fd5b818601915086601f830112610d0857600080fd5b813581811115610d1757600080fd5b876020828501011115610d2957600080fd5b6020830194508093505050509250925092565b60005b83811015610d57578181015183820152602001610d3f565b83811115610d66576000848401525b50505050565b82151581526040602082015260008251806040840152610d93816060850160208701610d3c565b601f01601f1916919091016060019392505050565b80356001600160a01b0381168114610dbf57600080fd5b919050565b600060208284031215610dd657600080fd5b610ddf82610da8565b9392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6020815260006001600160a01b0380610e2785610da8565b16602084015280610e3a60208601610da8565b166040840152506040830135606083015260608301356080830152608083013560a083015260a0830135601e19843603018112610e7657600080fd5b8301803567ffffffffffffffff811115610e8f57600080fd5b803603851315610e9e57600080fd5b60c080850152610eb560e085018260208501610de6565b95945050505050565b6000808335601e19843603018112610ed557600080fd5b83018035915067ffffffffffffffff821115610ef057600080fd5b6020019150368190038213156109ba57600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610f3d818460208701610d3c565b9190910192915050565b600082610f6457634e487b7160e01b600052601260045260246000fd5b500490565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b60008219821115610fb057634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080d000a";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wallet> {
    return super.deploy(overrides || {}) as Promise<Wallet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  override connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
